<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>60.0</apiVersion>
    <decisions>
        <description>Determine if the record type of the related case is the ADA Accommodation type found in the first get records node. If so, update the task.</description>
        <name>Do_IDs_Match</name>
        <label>Do IDs Match</label>
        <locationX>182</locationX>
        <locationY>611</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IDsMatch</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Record_Type_of_Related_Case.RecordType.Id</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Get_RecordType.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Task</targetReference>
            </connector>
            <label>IDsMatch</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determine if a related case record was found and therefore a related case record type.</description>
        <name>Record_Found</name>
        <label>Record Found?</label>
        <locationX>380</locationX>
        <locationY>503</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Record_Type_of_Related_Case</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Do_IDs_Match</targetReference>
            </connector>
            <label>Record Found</label>
        </rules>
    </decisions>
    <description>Flag tasks that are related to an ADA Accommodation case. This value is used to filter ADA tasks out of integration into SIS.</description>
    <environments>Default</environments>
    <interviewLabel>RT-BS {!$Flow.CurrentDateTime}</interviewLabel>
    <label>RT-C-BS Flag ADA Tasks</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Get the record type of the Related to ID. It assumes it is a case. If no record is found, we&apos;ll do nothing as the related to item will be something other than Case and therefore the task is not applicable to be updated.</description>
        <name>Get_Record_Type_of_Related_Case</name>
        <label>Get Record Type of Related Case</label>
        <locationX>380</locationX>
        <locationY>395</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Record_Found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WhatId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>RecordTypeId</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get the record typeid of the ADA Accommodation Case</description>
        <name>Get_RecordType</name>
        <label>Get RecordType</label>
        <locationX>380</locationX>
        <locationY>287</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Record_Type_of_Related_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case</stringValue>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ADA Accommodation</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Update the triggering task record Type field = ADA.</description>
        <name>Update_Task</name>
        <label>Update Task</label>
        <locationX>50</locationX>
        <locationY>719</locationY>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>ADA</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>254</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_RecordType</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Task</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
