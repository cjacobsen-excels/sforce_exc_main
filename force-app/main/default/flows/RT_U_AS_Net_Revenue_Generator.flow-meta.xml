<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>58.0</apiVersion>
    <assignments>
        <description>This is technically the Payment State Date which is used to trigger this flow to {!$Record.hed__Start_Date__c} + 15</description>
        <name>Calculate_New_Bi_weekly_payments_start_c</name>
        <label>Calculate New Bi_weekly_payments_start__c</label>
        <locationX>198</locationX>
        <locationY>2166</locationY>
        <assignmentItems>
            <assignToReference>$Record.Bi_weekly_payments_start__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CalculatepaymentDate_Second</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Global_Course_offering_Update_Values</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Set&apos;s Values that have to be updated to the Course offering</description>
        <name>Copy_1_of_Set_Net_Revenue_Values</name>
        <label>Set Net Revenue Values</label>
        <locationX>330</locationX>
        <locationY>1866</locationY>
        <assignmentItems>
            <assignToReference>$Record.Net_Revenue_Calculation__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>NewNetRevenue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Is_this_a_On_Load_Offering_net_revenue_calculation_NULL</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>use this assignment to update values that should be added when Compensation and Payments flow runs any time</description>
        <name>Global_Course_offering_Update_Values</name>
        <label>Global Course offering Update Values</label>
        <locationX>330</locationX>
        <locationY>2358</locationY>
        <assignmentItems>
            <assignToReference>$Record.Trigger_Net_Revenue_Calculation__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Course_Offering</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Save_Net_Revenue_Values_before_we_edit</name>
        <label>Save Net Revenue Values before we edit</label>
        <locationX>550</locationX>
        <locationY>276</locationY>
        <assignmentItems>
            <assignToReference>PreviousNetRevenue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Net_Revenue_Calculation__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Record_Type_Branching</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Set&apos;s Values that have to be updated to the Course offering</description>
        <name>Set_Compensation_Values1</name>
        <label>Set Compensation Values</label>
        <locationX>330</locationX>
        <locationY>1566</locationY>
        <assignmentItems>
            <assignToReference>NewNetRevenue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RTCourseOffering_PerPaymentCalculation</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Compare_the_Net_Revenue_Values</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Set Values that have to be updated to the Course Offering</description>
        <name>Set_Compensation_Values2</name>
        <label>Set Compensation Values</label>
        <locationX>286</locationX>
        <locationY>816</locationY>
        <assignmentItems>
            <assignToReference>$Record.Net_Revenue_Calculation__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Payment_Metadata1.Flat_Fee__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Global_Course_offering_Update_Values</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Set&apos;s Values that have to be updated to the Course offering</description>
        <name>Set_Net_Revenue_Values</name>
        <label>Set Net Revenue Values</label>
        <locationX>66</locationX>
        <locationY>1866</locationY>
        <assignmentItems>
            <assignToReference>$Record.Net_Revenue_Calculation__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>PreviousNetRevenue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Is_this_a_On_Load_Offering_net_revenue_calculation_NULL</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Set&apos;s Values that have to be updated to the Course offering</description>
        <name>SetCompensationValues</name>
        <label>Set Compensation Values</label>
        <locationX>66</locationX>
        <locationY>1566</locationY>
        <assignmentItems>
            <assignToReference>NewNetRevenue</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RTCourseOffering_FlatPaymentCalculation</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Compare_the_Net_Revenue_Values</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_if_Payment_Records_were_found</name>
        <label>Check if Payment Records were found</label>
        <locationX>550</locationX>
        <locationY>1350</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Payment_Metadata_Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Payment_Metadata</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Fee_Type_Decision</targetReference>
            </connector>
            <label>Payment Metadata Found</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Payment_Records_were_found1</name>
        <label>Check if Payment Records were found</label>
        <locationX>418</locationX>
        <locationY>708</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Payment_Metadata_Found1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Payment_Metadata1</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Compensation_Values2</targetReference>
            </connector>
            <label>Payment Metadata Found</label>
        </rules>
    </decisions>
    <decisions>
        <name>Compare_the_Net_Revenue_Values</name>
        <label>Compare the Net Revenue Values</label>
        <locationX>330</locationX>
        <locationY>1758</locationY>
        <defaultConnector>
            <targetReference>Is_this_a_On_Load_Offering_net_revenue_calculation_NULL</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Previous_New</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>PreviousNetRevenue</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>NewNetRevenue</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Net_Revenue_Values</targetReference>
            </connector>
            <label>Previous &gt; New</label>
        </rules>
        <rules>
            <name>New_Previous</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>NewNetRevenue</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>PreviousNetRevenue</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Set_Net_Revenue_Values</targetReference>
            </connector>
            <label>New &gt; Previous</label>
        </rules>
    </decisions>
    <decisions>
        <description>Branches out the &quot;Per&quot; and the &quot;Flat&quot; Payment Options</description>
        <name>Fee_Type_Decision</name>
        <label>Fee Type Decision?</label>
        <locationX>330</locationX>
        <locationY>1458</locationY>
        <defaultConnector>
            <targetReference>Compare_the_Net_Revenue_Values</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Flat</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Payment_Metadata.Fee_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Flat</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetCompensationValues</targetReference>
            </connector>
            <label>Flat</label>
        </rules>
        <rules>
            <name>Per</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Payment_Metadata.Fee_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Per</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Compensation_Values1</targetReference>
            </connector>
            <label>Per</label>
        </rules>
    </decisions>
    <decisions>
        <description>for Onload offerings - the process before does not change the payment calculation date - so we need to calculate it here.. We use the second filter here so we know we don&apos;t generate it the thrid time. The date should only move up ONCE.</description>
        <name>Is_this_a_On_Load_Offering_net_revenue_calculation_NULL</name>
        <label>Is this a On-Load Offering &amp; net revenue calculation = NULL</label>
        <locationX>330</locationX>
        <locationY>2058</locationY>
        <defaultConnector>
            <targetReference>Global_Course_offering_Update_Values</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_OnCall</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Faculty_Load_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>On Load</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>PreviousNetRevenue</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Calculate_New_Bi_weekly_payments_start_c</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Clinical instructor lead offerings are only paid a flat amount and does not change</description>
        <name>Is_this_Clinical_Instructor_Lead_Offering</name>
        <label>Is this Clinical Instructor Lead Offering ?</label>
        <locationX>616</locationX>
        <locationY>492</locationY>
        <defaultConnector>
            <targetReference>Get_Payment_Metadata</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Course_Offering_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Clinical Instructor Lead</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Payment_Metadata1</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Using this decision to Brant out different Record Types for Payment Calculation</description>
        <name>Record_Type_Branching</name>
        <label>Record Type Branching</label>
        <locationX>550</locationX>
        <locationY>384</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>RT_Course_Offering</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Course Offering</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Payment_Metadata</targetReference>
            </connector>
            <label>RT = Course Offering</label>
        </rules>
        <rules>
            <name>RT_Hybrid_Clinical</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Hybrid Clinical</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_this_Clinical_Instructor_Lead_Offering</targetReference>
            </connector>
            <label>RT = Hybrid Clinical</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <description>This formula should calculate the payment Date +15 days from the term start date if the number of students increased</description>
        <name>CalculatepaymentDate_Second</name>
        <dataType>Date</dataType>
        <expression>{!$Record.hed__Start_Date__c} + 15</expression>
    </formulas>
    <formulas>
        <description>transforms course level into Graduate or Undergraduate. Used to get the Faculty Metadata</description>
        <name>CourseLevelTransformationGLOBAL</name>
        <dataType>String</dataType>
        <expression>IF( TEXT({!$Record.hed__Course__r.Level__c}) = &quot;Graduate&quot; ,&quot;Graduate&quot;, &quot;Undergrad&quot;)</expression>
    </formulas>
    <formulas>
        <description>The amount difference from Compeantsation from CO and sum of all payment records</description>
        <name>DiffrencialAmount</name>
        <dataType>Number</dataType>
        <expression>{!$Record.Compensation__c}-{!TotalCompensation_fromPayment}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>PaydayCalculation</name>
        <dataType>Date</dataType>
        <expression>{!$Record.Payday_Calculation__c} + ({!Counter}*14)</expression>
    </formulas>
    <formulas>
        <description>This variable is used to get payments with payment date &gt; today +5. This is done because the first payment report will already be given to HR and is in process.</description>
        <name>PaymentOffsetDays</name>
        <dataType>Date</dataType>
        <expression>{!Term_StartDate} + 21</expression>
    </formulas>
    <formulas>
        <description>Transforms the course type to calculate either General or enhanced pay. ONLY to be used when using Record Type = Course offering</description>
        <name>RTCourseOffering_CourseTypeTransformation</name>
        <dataType>String</dataType>
        <expression>IF(TEXT({!$Record.Course_Offering_Type__c}) = &quot;Enhanced Pay&quot;, &quot;Enhanced Pay&quot;,&quot;General&quot;)</expression>
    </formulas>
    <formulas>
        <description>Payment Calculation ONLY for Course Offering record type with a &quot;Flat&quot; Fee type</description>
        <name>RTCourseOffering_FlatPaymentCalculation</name>
        <dataType>Currency</dataType>
        <expression>({!Get_Payment_Metadata.Flat_Fee__c} + {!Get_Payment_Metadata.Additional_Pay__c})</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <description>Payment Calculation ONLY for Course Offering record type with a &quot;Per&quot; Fee type</description>
        <name>RTCourseOffering_PerPaymentCalculation</name>
        <dataType>Currency</dataType>
        <expression>({!Get_Payment_Metadata.Flat_Fee__c} * {!$Record.Number_of_Students_Registered__c})+{!Get_Payment_Metadata.Additional_Pay__c}</expression>
        <scale>2</scale>
    </formulas>
    <interviewLabel>RT-U-AS-Net Revenue Generator {!$Flow.CurrentDateTime}</interviewLabel>
    <label>RT-U-AS-Net Revenue Generator</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Payment_Metadata</name>
        <label>Get Payment Metadata</label>
        <locationX>550</locationX>
        <locationY>1242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Payment_Records_were_found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Credits__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Credits_for_CMDT_Reference__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Faculty_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.hed__Faculty__r.Faculty_Level__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Level__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CourseLevelTransformationGLOBAL</elementReference>
            </value>
        </filters>
        <filters>
            <field>Lower_Range_Enrollment__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>$Record.Number_of_Students_Registered__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Upper_Range_Enrollment__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Record.Number_of_Students_Registered__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Course_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>RTCourseOffering_CourseTypeTransformation</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Faculty_Payments__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Payment_Metadata1</name>
        <label>Get Payment Metadata</label>
        <locationX>418</locationX>
        <locationY>600</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Payment_Records_were_found1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Credits__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Credits_for_CMDT_Reference__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Faculty_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.hed__Faculty__r.Faculty_Level__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Level__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CourseLevelTransformationGLOBAL</elementReference>
            </value>
        </filters>
        <filters>
            <field>Lower_Range_Enrollment__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>$Record.Number_of_Students_Registered__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Upper_Range_Enrollment__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Record.Number_of_Students_Registered__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Course_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Course_Offering_Type__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Faculty_Payments__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>RecordVar for updating Triggering record</description>
        <name>Update_Course_Offering</name>
        <label>Update Course Offering</label>
        <locationX>330</locationX>
        <locationY>2466</locationY>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Trigger_Net_Revenue_Calculation__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Active</stringValue>
            </value>
        </filters>
        <filters>
            <field>hed__Faculty__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>0034O00002mW89pQAC</stringValue>
            </value>
        </filters>
        <object>hed__Course_Offering__c</object>
        <recordTriggerType>Update</recordTriggerType>
        <scheduledPaths>
            <name>Dummy_Schedule_Path</name>
            <connector>
                <targetReference>Save_Net_Revenue_Values_before_we_edit</targetReference>
            </connector>
            <label>Dummy Schedule Path</label>
            <maxBatchSize>2</maxBatchSize>
            <offsetNumber>1</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <timeSource>RecordTriggerEvent</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <description>Counter for the Number of payments to be created</description>
        <name>Counter</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>NewNetRevenue</name>
        <dataType>Currency</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <description>Record Collection used to add values to Single Update</description>
        <name>Payment2CreateCollection</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Payment__c</objectType>
    </variables>
    <variables>
        <description>Record Variable to hold SINGLE payment records to be created</description>
        <name>Payment4CreateUpdate_Single</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Payment__c</objectType>
    </variables>
    <variables>
        <description>Collection used to Update Payment Records</description>
        <name>Payments4UpdateCollection</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Payment__c</objectType>
    </variables>
    <variables>
        <name>PreviousNetRevenue</name>
        <dataType>Currency</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <description>Term Start date to be stored in a variable</description>
        <name>Term_StartDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Test</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>The variable holds total compensation from all payment records. This is ONLY used in verifying if the total pay amount = compensation</description>
        <name>TotalCompensation_fromPayment</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
</Flow>
