<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Creates a task to alert FPD to submit offering for approval</description>
        <name>Copy_1_of_Create_Task_for_FPD</name>
        <label>Create Task for FPD</label>
        <locationX>842</locationX>
        <locationY>1979</locationY>
        <actionName>NewTask</actionName>
        <actionType>quickAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>OwnerId</name>
            <value>
                <elementReference>$Record.FPD__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Description</name>
            <value>
                <elementReference>Get_Faculty_Over_Course_Metadata.Description_Text_Area__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>ActivityDate</name>
            <value>
                <elementReference>$Record.hed__Start_Date__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Priority</name>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>WhatId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Status</name>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Subject</name>
            <value>
                <elementReference>Get_Faculty_Over_Course_Metadata.Name_Subject__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>NewTask</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Creates a task to alert FPD to submit offering for approval</description>
        <name>Create_Task_for_FPD</name>
        <label>Create Task for FPD</label>
        <locationX>710</locationX>
        <locationY>755</locationY>
        <actionName>NewTask</actionName>
        <actionType>quickAction</actionType>
        <connector>
            <targetReference>Set_Time_Stamp</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>OwnerId</name>
            <value>
                <elementReference>$Record.FPD__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Description</name>
            <value>
                <elementReference>Get_Hours_Limit_Metadata.Description_Text_Area__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>ActivityDate</name>
            <value>
                <elementReference>$Record.hed__Start_Date__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Priority</name>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>WhatId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Status</name>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Subject</name>
            <value>
                <elementReference>Get_Facutly_Over_Hours_Metadata.Name_Subject__c</elementReference>
            </value>
        </inputParameters>
        <nameSegment>NewTask</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Email FPD to alert of faculty over hours</description>
        <name>Faculty_Notice</name>
        <label>Faculty Notice</label>
        <locationX>710</locationX>
        <locationY>647</locationY>
        <actionName>hed__Course_Offering__c.Course_Offering_Hours_Overage_Notification</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Create_Task_for_FPD</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>hed__Course_Offering__c.Course_Offering_Hours_Overage_Notification</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_Exceeded_Course_Limit</name>
        <label>Send Email - Exceeded Course Limit</label>
        <locationX>842</locationX>
        <locationY>1871</locationY>
        <actionName>hed__Course_Offering__c.faculty_member_exceeded_allotted_number_of_teachings_in_semester</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Copy_1_of_Create_Task_for_FPD</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>hed__Course_Offering__c.faculty_member_exceeded_allotted_number_of_teachings_in_semester</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <decisions>
        <name>Check_if_record_Meets_Credit_Approval</name>
        <label>Check if record Meets Credit Approval</label>
        <locationX>842</locationX>
        <locationY>1055</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>No_Approval_Needed</name>
            <conditionLogic>1 OR (2 AND 3) OR 4 OR 5 OR 6</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Faculty_Load_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>On Load</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FPD__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.hed__Faculty__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Approval_Triggered__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>No Approval Needed</label>
        </rules>
        <rules>
            <name>Full_Time</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Faculty_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Full Time</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Faculty_Load_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Off Load</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Faculty_Load_Type__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>FTF_Get_Course_Limit_Metadata</targetReference>
            </connector>
            <label>Full Time</label>
        </rules>
        <rules>
            <name>Staff</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Faculty_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Staff</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Faculty_Load_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Off Load</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Faculty_Load_Type__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Staff_Get_Credit_Limit_Metadata</targetReference>
            </connector>
            <label>Staff</label>
        </rules>
        <rules>
            <name>Adjunct</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Faculty_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Adjunct</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Faculty_Load_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Off Load</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Faculty_Load_Type__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Adjunct_Get_Credit_Limit_Metadata</targetReference>
            </connector>
            <label>Adjunct</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if hours are over the limit for the current and next calendar year.</description>
        <name>Is_Faculty_over_Hours</name>
        <label>Is Faculty over Hours ?</label>
        <locationX>842</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Check_if_record_Meets_Credit_Approval</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NOT Over Limit</defaultConnectorLabel>
        <rules>
            <name>Over_Limit</name>
            <conditionLogic>1 AND 2 AND 3 AND 4 AND ((5 AND 6) OR (7 AND 8)) AND 9</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Exclude_from_Adjunct_Off_Load_Processes__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.hed__Faculty__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FPD__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Contract_Hours_Approval_Triggered__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.hed__Faculty__r.Contract_Hours_Next_Calendar_Year__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Hours_Limit_Metadata.Quantity__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Next_Calendar_Year__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.hed__Faculty__r.Contract_Hours_Current_Calendar_Year__c</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Hours_Limit_Metadata.Quantity__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Current_Calendar_Year__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Exclude_from_Utilization_Limits__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Facutly_Over_Hours_Metadata</targetReference>
            </connector>
            <label>Over Limit</label>
        </rules>
    </decisions>
    <decisions>
        <description>This is used so we know how many utilization records we need to compare against</description>
        <name>Which_Utilization_Records_are_populated</name>
        <label>Which Utilization Records are populated</label>
        <locationX>50</locationX>
        <locationY>1271</locationY>
        <defaultConnectorLabel>No Approval Needed</defaultConnectorLabel>
        <rules>
            <name>Term_Session_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__r.Courses_Offload__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>FTF_Get_Course_Limit_Metadata.Quantity__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Time_Stamp_Credit</targetReference>
            </connector>
            <label>Term Session 1</label>
        </rules>
        <rules>
            <name>Term_Session_2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__r.Courses_Offload__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>FTF_Get_Course_Limit_Metadata.Quantity__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Time_Stamp_Credit</targetReference>
            </connector>
            <label>Term Session 2</label>
        </rules>
        <rules>
            <name>Both</name>
            <conditionLogic>1 AND 2 AND (3 OR 4)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__r.Courses_Offload__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>FTF_Get_Course_Limit_Metadata.Quantity__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__r.Courses_Offload__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>FTF_Get_Course_Limit_Metadata.Quantity__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Time_Stamp_Credit</targetReference>
            </connector>
            <label>Both</label>
        </rules>
    </decisions>
    <decisions>
        <description>This is used so we know how many utilization records we need to compare against</description>
        <name>Which_Utilization_Records_are_populated1</name>
        <label>Which Utilization Records are populated</label>
        <locationX>842</locationX>
        <locationY>1271</locationY>
        <defaultConnectorLabel>No Approval Needed</defaultConnectorLabel>
        <rules>
            <name>Term_Session_1_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__r.Courses_Offload__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>Staff_Get_Credit_Limit_Metadata.Quantity__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Time_Stamp_Credit</targetReference>
            </connector>
            <label>Term Session 1</label>
        </rules>
        <rules>
            <name>Term_Session_2_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__r.Courses_Offload__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>Staff_Get_Credit_Limit_Metadata.Quantity__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Time_Stamp_Credit</targetReference>
            </connector>
            <label>Term Session 2</label>
        </rules>
        <rules>
            <name>Both_1</name>
            <conditionLogic>1 AND 2 AND (3 OR 4)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__r.Courses_Offload__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>Staff_Get_Credit_Limit_Metadata.Quantity__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__r.Courses_Offload__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>Staff_Get_Credit_Limit_Metadata.Quantity__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Time_Stamp_Credit</targetReference>
            </connector>
            <label>Both</label>
        </rules>
    </decisions>
    <decisions>
        <description>This is used so we know how many utilization records we need to compare against</description>
        <name>Which_Utilization_Records_are_populated_3</name>
        <label>Which Utilization Records are populated</label>
        <locationX>1634</locationX>
        <locationY>1271</locationY>
        <defaultConnectorLabel>No Approval Needed</defaultConnectorLabel>
        <rules>
            <name>Term_Session_1_2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__r.Credit__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>Adjunct_Get_Credit_Limit_Metadata.Quantity__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Time_Stamp_Credit</targetReference>
            </connector>
            <label>Term Session 1</label>
        </rules>
        <rules>
            <name>Term_Session_2_2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__r.Credit__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>Adjunct_Get_Credit_Limit_Metadata.Quantity__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Time_Stamp_Credit</targetReference>
            </connector>
            <label>Term Session 2</label>
        </rules>
        <rules>
            <name>Both_3</name>
            <conditionLogic>1 AND 2 AND (3 OR 4)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_1__r.Credit__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>Adjunct_Get_Credit_Limit_Metadata.Quantity__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Term_Session_2__r.Credit__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <elementReference>Adjunct_Get_Credit_Limit_Metadata.Quantity__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Time_Stamp_Credit</targetReference>
            </connector>
            <label>Both</label>
        </rules>
    </decisions>
    <description>v2 - Start working on Credit Approval ||Runs when Qualified Faculty is changed and not null. Checks to see if the faculty assigned is over their hours limit for the year in question. (this year or next year). If so,  creates a task and email to FPD to remind them to submit the offering for approval. Flags offering as Over Hours Limit approval = Required V3 - Added entry condition to exclude course offering type = Clinical Instructor On Call</description>
    <environments>Default</environments>
    <interviewLabel>Contract Hours Approval Check {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Contract Hours Approval Check</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Store the Credit limit value in the Faculty Management Metadata. Use this instead of a static value in case the metadata changes.
In this path, we are only looking to get the Adjenct Off Load Limit</description>
        <name>Adjunct_Get_Credit_Limit_Metadata</name>
        <label>Adjunct_Get Credit Limit Metadata</label>
        <locationX>1634</locationX>
        <locationY>1163</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Which_Utilization_Records_are_populated_3</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Term_Credit_Limit</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Faculty_Management__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Store the Course limit value in the Faculty Management Metadata. Use this instead of a static value in case the metadata changes.
In this path, we are only looking to get the Full Time Faculty Off Load Limit</description>
        <name>FTF_Get_Course_Limit_Metadata</name>
        <label>FTF_Get Course Limit Metadata</label>
        <locationX>50</locationX>
        <locationY>1163</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Which_Utilization_Records_are_populated</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>FTF_Term_Course_Limit</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Faculty_Management__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Returns the Faculty Management custom metadata for field Faculty Over Courses. Used by the task for Description and Subject</description>
        <name>Get_Faculty_Over_Course_Metadata</name>
        <label>Get 	Faculty_Over_Course Metadata</label>
        <locationX>842</locationX>
        <locationY>1763</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Send_Email_Exceeded_Course_Limit</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Faculty_Over_Course</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Faculty_Management__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Returns the Faculty Management custom metadata for field Faculty Over Hours. Used by the task for Description and Subject</description>
        <name>Get_Facutly_Over_Hours_Metadata</name>
        <label>Get Facutly_Over_Hours Metadata</label>
        <locationX>710</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Faculty_Notice</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Faculty_Over_Hours</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Faculty_Management__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Store the hours limit value in the Faculty Management Metadata. Use this instead of a static value in case the metadata changes.</description>
        <name>Get_Hours_Limit_Metadata</name>
        <label>Get Hours Limit Metadata</label>
        <locationX>842</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Faculty_over_Hours</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Hours_Limit_Year</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Faculty_Management__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Store the Credit limit value in the Faculty Management Metadata. Use this instead of a static value in case the metadata changes.
In this path, we are only looking to get the Staff Off Load Limit</description>
        <name>Staff_Get_Credit_Limit_Metadata</name>
        <label>Staff_Get Credit Limit Metadata</label>
        <locationX>842</locationX>
        <locationY>1163</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Which_Utilization_Records_are_populated1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Staff_Term_Course_Limit</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Faculty_Management__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Set the hours limit to required and the time triggered to now</description>
        <name>Set_Time_Stamp</name>
        <label>Set Time Stamp</label>
        <locationX>710</locationX>
        <locationY>863</locationY>
        <connector>
            <targetReference>Check_if_record_Meets_Credit_Approval</targetReference>
        </connector>
        <inputAssignments>
            <field>Contract_Hours_Approval_Triggered__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Hours_Limit_Approval_Status__c</field>
            <value>
                <stringValue>Required</stringValue>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Set the hours limit to required and the time triggered to now</description>
        <name>Set_Time_Stamp_Credit</name>
        <label>Set Time Stamp</label>
        <locationX>842</locationX>
        <locationY>1655</locationY>
        <connector>
            <targetReference>Get_Faculty_Over_Course_Metadata</targetReference>
        </connector>
        <inputAssignments>
            <field>Approval_Status__c</field>
            <value>
                <stringValue>Required</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Approval_Triggered__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>716</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Hours_Limit_Metadata</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Qualified_Faculty__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Qualified_Faculty__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Course_Offering_Type__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Clinical Instructor On Call</stringValue>
            </value>
        </filters>
        <object>hed__Course_Offering__c</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
