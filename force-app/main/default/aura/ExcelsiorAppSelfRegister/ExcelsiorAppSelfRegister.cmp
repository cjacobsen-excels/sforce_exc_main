<aura:component implements="forceCommunity:availableForAllPageTypes" access="global" controller="ExcelsiorSelfRegisterController">
	<aura:attribute name="accountId" type="String" required="false" description="accountId for creating the user. If not specified, it will create a PersonAccount if possible for B2C scenario. Or otherwise if it's in a community, the community's self-registration accountId will be used."/>
    <aura:attribute name="regConfirmUrl" type="String" required="true"/>
    <aura:attribute name="startUrl" type="String" required="false" description="The url you go to after a successful login" />
    <aura:attribute name="showError" type="Boolean" required="true" description="" default="false" access="private"/>
    <aura:attribute name="errorMessage" type="String" required="false" description="" access="private"/>
    <aura:attribute name="firstnameLabel" type="String" required="false" default="First Name"/>
    <aura:attribute name="lastnameLabel" type="String" required="false" default="Last Name"/>
    <aura:attribute name="emailLabel" type="String" required="false" default="Email"/>
    <aura:attribute name="passwordLabel" type="String" required="false" default="Create Password"/>
    <aura:attribute name="confirmPasswordLabel" type="String" required="false" default="Confirm Password"/>    
    <aura:attribute name="submitButtonLabel" type="String" required="false" default="Sign Up"/>
    <aura:attribute name="includePasswordField" type="Boolean" required="false" default="false" description="Whether to include password"/>    
    <aura:attribute name="extraFieldsFieldSet" type="String" required="false" description="A field set name whose fields are desired for user registration"/>
    <aura:attribute name="extraFields" type="list" required="false" description="A field set name whose fields are desired for user registration"/>
    <aura:handler name="init" value="{!this}" action="{!c.initialize}"/>
    <aura:attribute name="expid" type="String" required="false" description="The branding experience ID" />    
    
    <aura:registerevent name="sitePropagatedStartUrl" type="c:setStartUrl"/>
    <aura:handler name="init" value="{!this}" action="{!c.initialize}"/>
    <aura:dependency resource="c:setStartUrl" type="EVENT"/>
    <!-- Please uncomment
    <aura:dependency resource="siteforce:registerQueryEventMap" type="EVENT"/>
    -->
    <aura:handler event="c:setStartUrl" action="{!c.setStartUrl}"/> 
    <aura:handler event="c:setExpId" action="{!c.setExpId}"/>    
    <aura:dependency resource="c:setExpId" type="EVENT"/>   
    
    <aura:attribute name="recaptchaResponse" type="String" />
    <aura:attribute name="successMessage" type="String"/>
    <aura:attribute name="academicAreaOfInterestOptions" type="String[]"/>
    <aura:attribute name="levelOfInterestOptions" type="String[]"/>
    <aura:attribute name="selectedAcademicAreaOfInterest" type="String"/>
    <aura:attribute name="selectedLevelOfInterest" type="String"/>
    <aura:attribute name="showSpinner" type="Boolean" default="false"/>    

	<aura:if isTrue="{!v.showSpinner}">
        <div class="slds-spinner_container">
            <div role="status" class="slds-spinner slds-spinner_medium slds-spinner_brand">
                <span class="slds-assistive-text">Loading</span>
                <div class="slds-spinner__dot-a"></div>
                <div class="slds-spinner__dot-b"></div>
            </div>
        </div>    
    </aura:if>
   <div>
		        
            <aura:renderIf isTrue="{!v.showError}">
                <div id="error">
                    <ui:outputRichText value="{!v.errorMessage}"/>
                </div>
                <aura:set attribute="else">
					<div id="success">
                    	<ui:outputRichText value="{!v.successMessage}"/>
                	</div>
                </aura:set>
            </aura:renderIf>
        	
            <div id="sfdc_username_container" class="sfdc">
                 <ui:inputText value="" aura:id="firstname" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc" label="{!v.firstnameLabel}" required="true"/>
            </div>

            <div id="sfdc_nickname_container" class="sfdc">
                 <ui:inputText value="" aura:id="lastname" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc" label="{!v.lastnameLabel}" required="true"/>
            </div>

            <div id="sfdc_email_container" class="sfdc">
                 <ui:inputText value="" aura:id="email" placeholder="" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc" label="{!v.emailLabel}" required="true"/>
            </div>
            
            <aura:iteration aura:id="extraFields" items="{!v.extraFields}" var="curField" indexVar="index">
                <div id="sfdc_extrafield_container" class="sfdc">
                    <aura:if isTrue="{!equals(curField.fieldPath,'Phone')}">
                        <ui:inputPhone value="{!curField.value}" aura:id="{!curField.fieldPath}" placeholder="" keyup="{!c.onKeyUp}" class="input sfdc_extrafieldinput sfdc" label="{!curField.label}" required="true" maxlength="10">
                        </ui:inputPhone>
                    </aura:if>
                    <aura:if isTrue="{!equals(curField.fieldPath,'Academic_Area_of_Interest__c')}">
                        <lightning:select aura:id="academic" label="{!curField.label}" required="true" onchange="{!c.setSelectedAcademicValue}">
                            <aura:iteration items="{!v.academicAreaOfInterestOptions}" var="academicAreaOfInterest">
                                <option value="{!academicAreaOfInterest}">{!academicAreaOfInterest}</option>
                            </aura:iteration>
                        </lightning:select>
                       
                    </aura:if>
                    <aura:if isTrue="{!equals(curField.fieldPath,'Level_of_Interest__c')}">
                        <lightning:select aura:id ="level" label="{!curField.label}" required="true" onchange="{!c.setSelectedLevelValue}">
                            <aura:iteration items="{!v.levelOfInterestOptions}" var="levelOfInterest">
                                <option value="{!levelOfInterest}">{!levelOfInterest}</option>
                            </aura:iteration>
                        </lightning:select>
                        
                    </aura:if>
                    
                </div>
            </aura:iteration>

            <aura:renderIf isTrue="{!v.includePasswordField}">
                <div id="sfdc_password_container" class="sfdc">
                    <span id="sfdc_lock" class="login-icon sfdc" data-icon="c"></span>
                    <ui:inputSecret value="" aura:id="password" placeholder="{!v.passwordLabel}" keyup="{!c.onKeyUp}" class="input sfdc_passwordinput sfdc"/>
                </div>
    
                <div id="sfdc_confirm_password_container" class="sfdc">
                    <span id="sfdc_lock" class="login-icon sfdc" data-icon="c"></span>
                    <ui:inputSecret value="" aura:id="confirmPassword" placeholder="{!v.confirmPasswordLabel}" keyup="{!c.onKeyUp}" class="input sfdc_passwordinput sfdc"/>
                </div>
            </aura:renderIf>
				
       <iframe aura:id='googleRecaptchaVfFrame' src="/apply/apex/GoogleRecaptcha" frameborder="0" scrolling="auto" style="border:0px;" height="500px" width="100%"></iframe>
     
            <div class="sfdc">
                <ui:button aura:id="submitButton" disabled = "false" label="{!v.submitButtonLabel}" press="{!c.handleSelfRegister}" class="sfdc_button"/>
            </div>
    </div>	
</aura:component>