<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <assignments>
        <description>Take the Record Collection of GetAffiliations, move them into Affiliation4Update (single variable) and then assign it bak to Affiliations4Update (CollectionVariable)</description>
        <name>Assign_Affiliation_Values</name>
        <label>Assign Affiliation Values</label>
        <locationX>182</locationX>
        <locationY>1463</locationY>
        <assignmentItems>
            <assignToReference>Affiliation4Update.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Affiliations.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Affiliation4Update.hed__Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Inactive</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Affiliation4Update.hed__EndDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Affiliations4Update</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Affiliation4Update</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Affiliations</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Take the Record Collection of GetAffiliationsFERPASexual, move them into Affiliation4Update (single variable), and then assign it back to Affiliations4Update (CollectionVariable)</description>
        <name>Assign_Affiliation_Values1</name>
        <label>Assign Affiliation Values</label>
        <locationX>182</locationX>
        <locationY>2363</locationY>
        <assignmentItems>
            <assignToReference>Affiliation4Update.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_AffiliationsFERPASexual.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Affiliation4Update.hed__Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New Instructor</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Affiliations4Update</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Affiliation4Update</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_AffiliationsFERPASexual</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Takes the values from Contact and puts them into the campaign member record.</description>
        <name>Assign_Campaign_member_Values</name>
        <label>Assign Campaign member Values</label>
        <locationX>94</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>CampaignMember4Create.CampaignId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.SRCampaign__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CampaignMember4Create.ContactId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CampaignMember4Create.Source__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.SRCampaignSource__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CampaignMember4Create.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Converted</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CampaignMember4Create.utm_campaign__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.utm_campaign__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CampaignMember4Create.utm_medium__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.utm_medium__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CampaignMember4Create.utm_source__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.utm_source__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CampaignMember4Create.utm_term__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>Crate_Campaign_Member</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Take the Record Collection of GetDegreeProgram, move them into DegreeProgram4Update (single variable), and then assign it back to DegreePrograms4Update (CollectionVariable)</description>
        <name>Assign_Degree_Program_Values</name>
        <label>Assign Degree Program Values</label>
        <locationX>138</locationX>
        <locationY>3263</locationY>
        <assignmentItems>
            <assignToReference>DegreeProgram4Update.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Degree_Programs.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>DegreeProgram4Update.Contact_Status_Advising__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Contact_Status_Advising__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>DegreePrograms4Update</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>DegreeProgram4Update</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Degree_Programs</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Contact advising Status is need to be synced on the degree program object, hence whenever this changes, we need to update all degree programs</description>
        <name>Did_Contact_Advising_Status_Change</name>
        <label>Did Contact Advising Status Change</label>
        <locationX>380</locationX>
        <locationY>2831</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_AdvisingStatusChanged</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Contact_Status_Advising__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.Contact_Status_Advising__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Degree_Programs</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check the Record Variable from the step above. if not found it should be blank</description>
        <name>Do_Affiliations_Exist</name>
        <label>Do Affiliations Exist</label>
        <locationX>226</locationX>
        <locationY>1247</locationY>
        <defaultConnector>
            <targetReference>Has_Sexual_Harassment_or_FERPA_Training_Marked_as_complete</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Affiliations_Exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Affiliations</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_Affiliations</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check the Record Variable from the step above. if not found it should be blank</description>
        <name>Do_Affiliations_Exist1</name>
        <label>Do Affiliations Exist</label>
        <locationX>226</locationX>
        <locationY>2147</locationY>
        <defaultConnector>
            <targetReference>Did_Contact_Advising_Status_Change</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Affiliations_FERPASexual</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_AffiliationsFERPASexual</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check the Record Variable from the step above. if not found it should be blank</description>
        <name>Do_Degree_Program_Exist</name>
        <label>Do Degree Program Exist</label>
        <locationX>182</locationX>
        <locationY>3047</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>YES_DegreeProgramsExist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Degree_Programs</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_Degree_Programs</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check the Record Variable from the step above. if not found it should be blank</description>
        <name>Does_Campaign_member_exist</name>
        <label>Does Campaign member exist ?</label>
        <locationX>226</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>Is_Contact_Category_IF</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Record_Variable_is_NULL</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Campaign_Member</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Campaign_member_Values</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>The two training types are marked done from ULTI, When that happens we need to the pending affiliation for the staff and mark it as complete</description>
        <name>Has_Sexual_Harassment_or_FERPA_Training_Marked_as_complete</name>
        <label>Has Sexual Harassment or FERPA Training Marked as complete</label>
        <locationX>380</locationX>
        <locationY>1931</locationY>
        <defaultConnector>
            <targetReference>Did_Contact_Advising_Status_Change</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>FERPA_and_Sexual_Harassment_Complete</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Sexual_Harassment_Training_Complete__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.FERPA_Training_Complete__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Sexual_Harassment_Training_Complete__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Sexual_Harassment_Training_Complete__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.FERPA_Training_Complete__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.FERPA_Training_Complete__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Affiliations_FERPASexual</targetReference>
            </connector>
            <label>YES</label>
        </rules>
    </decisions>
    <decisions>
        <description>IF = Inactive Faculty, This means all active affiliations need to be turned into in-active</description>
        <name>Is_Contact_Category_IF</name>
        <label>Is Contact Category = IF</label>
        <locationX>380</locationX>
        <locationY>1031</locationY>
        <defaultConnector>
            <targetReference>Has_Sexual_Harassment_or_FERPA_Training_Marked_as_complete</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Contact_Category_IF</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Contact_Category__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IF</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Contact_Category__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>IF</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Affiliations</targetReference>
            </connector>
            <label>Contact Category = IF</label>
        </rules>
    </decisions>
    <decisions>
        <description>SR Campaign is a Lookup field on the contact. If it has changed we need to see if a campaign member already exists or not. Marketo does not create a campaign member!</description>
        <name>SR_Campaign_Changed</name>
        <label>SR Campaign Changed ?</label>
        <locationX>380</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>Is_Contact_Category_IF</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Campaign_Prior_NOT_Current</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SRCampaign__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.SRCampaign__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SRCampaign__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Campaign_Member</targetReference>
            </connector>
            <label>Campaign Prior != Current</label>
        </rules>
    </decisions>
    <description>Use this flow for all AFTER Save Updates on Contact when it is UPDATED. 
The version includes a node from - Process Builder - Contact_SRCampaign_PBProcess and all updates in the contact Update Process</description>
    <environments>Default</environments>
    <interviewLabel>RT-U-AS-Contact General {!$Flow.CurrentDateTime}</interviewLabel>
    <label>RT-U-AS-Contact General</label>
    <loops>
        <description>From the collection variables, we need to loop the record collection into a single record variable back to a record collection.</description>
        <name>Loop_Affiliations</name>
        <label>Loop Affiliations</label>
        <locationX>94</locationX>
        <locationY>1355</locationY>
        <collectionReference>Get_Affiliations</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_Affiliation_Values</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Affiliations</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>From the collection variables, we need to loop the record collection into a single record variable back to a record collection.</description>
        <name>Loop_AffiliationsFERPASexual</name>
        <label>Loop Affiliations</label>
        <locationX>94</locationX>
        <locationY>2255</locationY>
        <collectionReference>Get_Affiliations_FERPASexual</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_Affiliation_Values1</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Affiliations1</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>From the collection variables, we need to loop the record collection into a single record variable back to a record collection.</description>
        <name>Loop_Degree_Programs</name>
        <label>Loop Degree Programs</label>
        <locationX>50</locationX>
        <locationY>3155</locationY>
        <collectionReference>Get_Degree_Programs</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_Degree_Program_Values</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Degree_Programs</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Creates Campaign Member for contacts that have a new SR Campaign value (imported from Marketo) and are not campaign members</description>
        <name>Crate_Campaign_Member</name>
        <label>Crate Campaign Member</label>
        <locationX>94</locationX>
        <locationY>755</locationY>
        <connector>
            <targetReference>Is_Contact_Category_IF</targetReference>
        </connector>
        <inputReference>CampaignMember4Create</inputReference>
    </recordCreates>
    <recordLookups>
        <description>When contact is turned Inactive Faculty, it we need to update affiliations. This step will get them</description>
        <name>Get_Affiliations</name>
        <label>Get Affiliations</label>
        <locationX>226</locationX>
        <locationY>1139</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Do_Affiliations_Exist</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3 OR 4 OR 5 OR 6)</filterLogic>
        <filters>
            <field>hed__Contact__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>hed__Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Pending</stringValue>
            </value>
        </filters>
        <filters>
            <field>hed__Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>New Instructor</stringValue>
            </value>
        </filters>
        <filters>
            <field>hed__Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Active</stringValue>
            </value>
        </filters>
        <filters>
            <field>hed__Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Active-Outgoing</stringValue>
            </value>
        </filters>
        <filters>
            <field>hed__Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Applicant</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>hed__Affiliation__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>When contact is marked as complete for Sexual Harassment and FERPA, we need to change their pending affiliations</description>
        <name>Get_Affiliations_FERPASexual</name>
        <label>Get Affiliations</label>
        <locationX>226</locationX>
        <locationY>2039</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Do_Affiliations_Exist1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>hed__Contact__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>hed__Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Pending</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>hed__Affiliation__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>This step we check that if the campaign was changed, does a campaign member exist for the new one</description>
        <name>Get_Campaign_Member</name>
        <label>Get Campaign Member</label>
        <locationX>226</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_Campaign_member_exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CampaignId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.SRCampaign__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>ContactId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CampaignMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get all Degree Programs related to Contact</description>
        <name>Get_Degree_Programs</name>
        <label>Get Degree Programs</label>
        <locationX>182</locationX>
        <locationY>2939</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Do_Degree_Program_Exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Student_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Degree_Program__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>From the inactive Affiliations we get, we need to change their End Date and make them inactive</description>
        <name>Update_Affiliations</name>
        <label>Update Affiliations</label>
        <locationX>94</locationX>
        <locationY>1655</locationY>
        <connector>
            <targetReference>Has_Sexual_Harassment_or_FERPA_Training_Marked_as_complete</targetReference>
        </connector>
        <inputReference>Affiliations4Update</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>From the Affiliations we get, we need to change their Status from pending to new instructor</description>
        <name>Update_Affiliations1</name>
        <label>Update Affiliations</label>
        <locationX>94</locationX>
        <locationY>2555</locationY>
        <connector>
            <targetReference>Did_Contact_Advising_Status_Change</targetReference>
        </connector>
        <inputReference>Affiliations4Update</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Update Degree Programs with Contact Status - Advising</description>
        <name>Update_Degree_Programs</name>
        <label>Update Degree Programs</label>
        <locationX>50</locationX>
        <locationY>3455</locationY>
        <inputReference>DegreePrograms4Update</inputReference>
    </recordUpdates>
    <start>
        <locationX>254</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>SR_Campaign_Changed</targetReference>
        </connector>
        <filterLogic>(1 AND 2) OR 3 OR 4 OR 5 OR 6</filterLogic>
        <filters>
            <field>SRCampaign__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>SRCampaign__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Contact_Category__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>FERPA_Training_Complete__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Sexual_Harassment_Training_Complete__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Contact_Status_Advising__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Contact</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <description>A SINGLE record variable for Affiliations that is only used in the assignment variable to take the loop item and pass it into the collection variable</description>
        <name>Affiliation4Update</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>hed__Affiliation__c</objectType>
    </variables>
    <variables>
        <description>a Collection of all affiliations that need to be updated</description>
        <name>Affiliations4Update</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>hed__Affiliation__c</objectType>
    </variables>
    <variables>
        <description>Holds the field value to create new Campaign member records</description>
        <name>CampaignMember4Create</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>CampaignMember</objectType>
    </variables>
    <variables>
        <description>SINGLE Record Variable that will only be used in the assignment part of this flow. All the values will then be assigned to the collection variable</description>
        <name>DegreeProgram4Update</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Degree_Program__c</objectType>
    </variables>
    <variables>
        <description>Collection Variable that will be used to update all Degree Programs</description>
        <name>DegreePrograms4Update</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Degree_Program__c</objectType>
    </variables>
</Flow>
